// <auto-generated />
using System;
using CBZ.ContactApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CBZ.ContactApp.Data.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20210117220250_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<DateTime>("Inserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Surname");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3999bbc4-751e-4fe5-9e72-4c6e88f6cff4"),
                            Company = "A",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 851, DateTimeKind.Local).AddTicks(4158),
                            Name = "A",
                            Surname = "Aa",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(227)
                        },
                        new
                        {
                            Id = new Guid("3182b605-a8cb-4eb4-81fb-81129159f095"),
                            Company = "B",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1154),
                            Name = "B",
                            Surname = "Bb",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1157)
                        },
                        new
                        {
                            Id = new Guid("b75cdf77-243b-4eb8-ab08-c44dcddb70ef"),
                            Company = "C",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1160),
                            Name = "C",
                            Surname = "Cc",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1161)
                        },
                        new
                        {
                            Id = new Guid("342ea3e1-6e66-4162-a7c0-390c2a5aa263"),
                            Company = "D",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1164),
                            Name = "D",
                            Surname = "Dd",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1165)
                        },
                        new
                        {
                            Id = new Guid("19c45392-88ba-4f96-92d4-c72024d48f81"),
                            Company = "E",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1167),
                            Name = "E",
                            Surname = "Ee",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 852, DateTimeKind.Local).AddTicks(1168)
                        });
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.Info", b =>
                {
                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid");

                    b.Property<int>("InfoTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Inserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("ContactId", "InfoTypeId");

                    b.HasIndex("InfoTypeId");

                    b.ToTable("Infos");

                    b.HasData(
                        new
                        {
                            ContactId = new Guid("3999bbc4-751e-4fe5-9e72-4c6e88f6cff4"),
                            InfoTypeId = 1,
                            Data = "11111111",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(7674),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(7699)
                        },
                        new
                        {
                            ContactId = new Guid("3999bbc4-751e-4fe5-9e72-4c6e88f6cff4"),
                            InfoTypeId = 2,
                            Data = "a@a.com",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8235),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8237)
                        },
                        new
                        {
                            ContactId = new Guid("3999bbc4-751e-4fe5-9e72-4c6e88f6cff4"),
                            InfoTypeId = 3,
                            Data = "Ankara",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8240),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8241)
                        },
                        new
                        {
                            ContactId = new Guid("3182b605-a8cb-4eb4-81fb-81129159f095"),
                            InfoTypeId = 1,
                            Data = "222222222",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8243),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8244)
                        },
                        new
                        {
                            ContactId = new Guid("3182b605-a8cb-4eb4-81fb-81129159f095"),
                            InfoTypeId = 2,
                            Data = "b@b.com",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8247),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8248)
                        },
                        new
                        {
                            ContactId = new Guid("3182b605-a8cb-4eb4-81fb-81129159f095"),
                            InfoTypeId = 3,
                            Data = "Ankara",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8255),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8256)
                        },
                        new
                        {
                            ContactId = new Guid("b75cdf77-243b-4eb8-ab08-c44dcddb70ef"),
                            InfoTypeId = 1,
                            Data = "333333333",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8259),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8260)
                        },
                        new
                        {
                            ContactId = new Guid("b75cdf77-243b-4eb8-ab08-c44dcddb70ef"),
                            InfoTypeId = 2,
                            Data = "c@c.com",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8262),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8263)
                        },
                        new
                        {
                            ContactId = new Guid("b75cdf77-243b-4eb8-ab08-c44dcddb70ef"),
                            InfoTypeId = 3,
                            Data = "Ankara",
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8265),
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 859, DateTimeKind.Local).AddTicks(8266)
                        },
                        new
                        {
                            ContactId = new Guid("342ea3e1-6e66-4162-a7c0-390c2a5aa263"),
                            InfoTypeId = 1,
                            Data = "4444444444"
                        },
                        new
                        {
                            ContactId = new Guid("342ea3e1-6e66-4162-a7c0-390c2a5aa263"),
                            InfoTypeId = 2,
                            Data = "d@d.com"
                        },
                        new
                        {
                            ContactId = new Guid("342ea3e1-6e66-4162-a7c0-390c2a5aa263"),
                            InfoTypeId = 3,
                            Data = "Bursa"
                        },
                        new
                        {
                            ContactId = new Guid("19c45392-88ba-4f96-92d4-c72024d48f81"),
                            InfoTypeId = 1,
                            Data = "555555555"
                        },
                        new
                        {
                            ContactId = new Guid("19c45392-88ba-4f96-92d4-c72024d48f81"),
                            InfoTypeId = 2,
                            Data = "e@e.com"
                        },
                        new
                        {
                            ContactId = new Guid("19c45392-88ba-4f96-92d4-c72024d48f81"),
                            InfoTypeId = 3,
                            Data = "Bursa"
                        });
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.InfoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("Inserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("InfoTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 855, DateTimeKind.Local).AddTicks(6330),
                            Name = "Phone",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 855, DateTimeKind.Local).AddTicks(6355)
                        },
                        new
                        {
                            Id = 2,
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 855, DateTimeKind.Local).AddTicks(6811),
                            Name = "Email",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 855, DateTimeKind.Local).AddTicks(6813)
                        },
                        new
                        {
                            Id = 3,
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 855, DateTimeKind.Local).AddTicks(6815),
                            Name = "Location",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 855, DateTimeKind.Local).AddTicks(6816)
                        });
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.ReportRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("ReportStateId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Requested")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("ReportStateId");

                    b.ToTable("ReportRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81ab94a2-891f-4a85-a6b8-b19a68e2cd26"),
                            Location = "Ankara",
                            ReportStateId = 1
                        },
                        new
                        {
                            Id = new Guid("c97fa77b-575e-4619-a7b1-b8282ad225f1"),
                            Location = "Bursa",
                            ReportStateId = 2
                        });
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.ReportState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("Inserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ReportStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 861, DateTimeKind.Local).AddTicks(2744),
                            Name = "Preparing",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 861, DateTimeKind.Local).AddTicks(2774)
                        },
                        new
                        {
                            Id = 2,
                            Inserted = new DateTime(2021, 1, 18, 1, 2, 49, 861, DateTimeKind.Local).AddTicks(2786),
                            Name = "Ready",
                            Updated = new DateTime(2021, 1, 18, 1, 2, 49, 861, DateTimeKind.Local).AddTicks(2787)
                        });
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.Info", b =>
                {
                    b.HasOne("CBZ.ContactApp.Data.Model.Contact", "Contact")
                        .WithMany("Infos")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBZ.ContactApp.Data.Model.InfoType", "InfoType")
                        .WithMany("Infos")
                        .HasForeignKey("InfoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("InfoType");
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.ReportRequest", b =>
                {
                    b.HasOne("CBZ.ContactApp.Data.Model.ReportState", "ReportState")
                        .WithMany("ReportRequest")
                        .HasForeignKey("ReportStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportState");
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.Contact", b =>
                {
                    b.Navigation("Infos");
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.InfoType", b =>
                {
                    b.Navigation("Infos");
                });

            modelBuilder.Entity("CBZ.ContactApp.Data.Model.ReportState", b =>
                {
                    b.Navigation("ReportRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
